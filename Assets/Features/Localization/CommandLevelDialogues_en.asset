%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e9620f8c34305754d8cc9a7e49e852d9, type: 3}
  m_Name: CommandLevelDialogues_en
  m_EditorClassIdentifier: 
  m_LocaleId:
    m_Code: en
  m_SharedData: {fileID: 11400000, guid: 4ee40d87dbc900942b02b32762a3f43d, type: 2}
  m_Metadata:
    m_Items: []
  m_TableData:
  - m_Id: 74319446016
    m_Localized: Experiment a little.
    m_Metadata:
      m_Items: []
  - m_Id: 31969558528
    m_Localized: Here you see a chessboard and a queen. You can control them with
      the buttons at the bottom right.
    m_Metadata:
      m_Items: []
  - m_Id: 457523642368
    m_Localized: 'As you may have noticed, the Queen is controlled by commands.

      How
      many different concrete commands do you think there are to control her?'
    m_Metadata:
      m_Items: []
  - m_Id: 1117409296384
    m_Localized: 1 is correct. Each button sends a specific MoveCommand, and only
      the parameters are chosen differently.
    m_Metadata:
      m_Items: []
  - m_Id: 1114343260160
    m_Localized: That's not quite right. Maybe you should take a closer look.
    m_Metadata:
      m_Items: []
  - m_Id: 20354488123392
    m_Localized: The Command Pattern belongs to the group of behavioral patterns.
      It offers the possibility of encapsulating commands in an object and thus queuing
      them up or undo or redo commands.
    m_Metadata:
      m_Items: []
  - m_Id: 21119617253376
    m_Localized: This usually serves to temporally separate the creation and invocation
      of such a command. However, it also serves a logical separation, since the
      caller does not need any information about the content of the actual command.
    m_Metadata:
      m_Items: []
  - m_Id: 21936155967488
    m_Localized: 'Ah, I see you have now found the glasses.

      All the important
      information is now displayed on the right.'
    m_Metadata:
      m_Items: []
  - m_Id: 22113516306432
    m_Localized: You can see when a command is pushed in the command stack or an
      undo in the undo stack. Redo puts a command from the undo stack back into the
      command stack. When a new command is executed, the undo stack is emptied.
    m_Metadata:
      m_Items: []
  - m_Id: 23266446589952
    m_Localized: 'A command interface therefore only has to specify two methods:
      Execute and Undo.'
    m_Metadata:
      m_Items: []
  - m_Id: 22868180647936
    m_Localized: That's it so far. I hope I could give you an impression of the Command
      Pattern.
    m_Metadata:
      m_Items: []
  - m_Id: 29308949676032
    m_Localized: Try a few more if you feel like it or go back.
    m_Metadata:
      m_Items: []
  references:
    version: 1
